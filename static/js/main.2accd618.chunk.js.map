{"version":3,"sources":["assets/imgs/add-contact.svg","assets/imgs/bitcoin.svg","assets/imgs/back.svg","assets/imgs/edit-contact.svg","assets/imgs/home.svg","assets/imgs/members.svg","services/BitcoinService.js","services/UserService.js","actions/UserActions.js","components/MovePreview.jsx","components/MoveList.jsx","pages/HomePage.jsx","services/ContacrServie.js","actions/ContactActions.js","components/ContactPreview.jsx","components/ContactList.jsx","components/ContactFilter.jsx","pages/ContactPage.jsx","components/TransferFund.jsx","pages/ContactDetailsPage.jsx","pages/ContactEditPage.jsx","pages/SignupPage.jsx","pages/StatisticPage.jsx","components/NavBar.jsx","App.jsx","serviceWorker.js","store/reducers/UserReducer.js","store/reducers/ContactReducer.js","store/index.js","index.js"],"names":["module","exports","bitcoinService","getRate","a","dolars","axios","get","res","rate","data","console","log","getMarketPrice","month","values","map","point","day","Date","x","getDate","getMonth","getFullYear","y","id","color","user","_","localStorage","JSON","parse","getMoves","contactId","stringify","moves","filter","move","splice","forEach","countBitcoin","count","at","atToShow","userService","getUser","Promise","resolve","sendCoins","contactName","unshift","now","isConnected","setUser","name","laodUser","dispatch","coins","type","loadMove","MovePreview","contact","className","Math","round","Number","EPSILON","MoveList","key","HomePage","setMarket","then","setState","this","props","state","src","bitcoinSvg","alt","pop","style","height","maxWidth","onClick","margin","top","right","bottom","left","xScale","axisTop","axisRight","axisBottom","axisLeft","orient","tickSize","tickPadding","tickRotation","legend","legendOffset","legendPosition","colors","scheme","pointSize","pointColor","theme","pointBorderWidth","enableGridX","enableGridY","pointBorderColor","from","enableArea","areaOpacity","useMesh","axis","ticks","line","stroke","text","fill","grid","strokeWidth","strokeDasharray","Component","mapDispatchToProps","connect","currMoves","BaseContacts","contacts","sort","arr","b","toLocaleLowerCase","_addContact","reject","_id","length","txt","possible","i","charAt","floor","random","_makeId","term","includes","phone","email","contactService","getContacts","filterBy","contactsToReturn","getContactById","find","deleteContact","index","findIndex","saveContact","c","_updateContact","getEmptyContact","loadContactById","ContactPreview","to","ContactList","ContactFilter","onChangeHandler","ev","target","value","onFilter","placeholder","onChange","ContactPage","onFileHendler","loadContacts","addContactSvg","title","TransferFund","send","useState","setCount","ContactDetailsPage","hendlerSend","addMove","match","params","setCurrMoves","backSvg","editSvg","currContact","ContactEditPage","handleInputChange","field","handleSave","redirect","newId","handleDelete","back","deleteStr","img","catch","push","onSubmit","preventDefault","isEdit","SignupPage","clickHelnder","signup","setData","yScale","min","max","stacked","reverse","NavBar","homeSvg","membersSvg","App","exact","path","component","StatisticPage","isLocalhost","Boolean","window","location","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","error","initialState","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","rootReducer","combineReducers","action","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker","e","prompt"],"mappings":"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","file":"static/js/main.2accd618.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/add-contact.da05397d.svg\";","module.exports = __webpack_public_path__ + \"static/media/bitcoin.56e5ff88.svg\";","module.exports = __webpack_public_path__ + \"static/media/back.7a10c171.svg\";","module.exports = __webpack_public_path__ + \"static/media/edit-contact.570dbdbd.svg\";","module.exports = __webpack_public_path__ + \"static/media/home.8eacb5a5.svg\";","module.exports = __webpack_public_path__ + \"static/media/members.de02feb6.svg\";","import axios from \"axios\";\n\nconst getRate = async (dolars = 1) => {\n    try {\n        const res = await axios.get(`https://blockchain.info/tobtc?currency=USD&value=1`)\n        const rate = +res.data;\n        return rate * dolars;\n    } catch (err) {\n        console.log('err');\n    }\n}\n\nconst getMarketPrice = async (month) => {\n    try {\n        const res = await axios.get(`https://api.blockchain.info/charts/market-price?timespan=${month}months&format=json&cors=true&limit=10`)\n        const data = res.data.values.map(point => {\n            const day = new Date(point.x * 1000)\n            return {\n                x: `${day.getDate()}/${day.getMonth()+1}/${day.getFullYear()}`,\n                y: point.y\n            }\n        })\n        return [\n            {\n                id: 'bitcoin',\n                color: 'hsl(118, 70%, 50%)',\n                data\n            }\n        ];\n    } catch (err) {\n        console.log('err');\n    }\n\n}\n\n\nexport const bitcoinService = {\n    getRate,\n    getMarketPrice\n}","import { bitcoinService } from \"./BitcoinService\";\n\n\nlet user = (_ => {\n    const res = localStorage.user;\n    if (res) return JSON.parse(res)\n    return null\n})()\n\nconst setUser = name=>{\n    user =     {\n            name,\n            dolars: 100,\n            moves: []\n        }\n        localStorage.user = JSON.stringify(user)\n        return Promise.resolve(user)\n    }\n\nconst getUser = _ => {\n    return Promise.resolve(user)\n}\nconst isConnected = _ => {\n    return !!user;\n}\nconst sendCoins = (count, contactId, contactName) => {\n    user.dolars -= count;\n    user.moves.unshift({ count, contactId, contactName, at: Date.now() })\n    localStorage.user = JSON.stringify(user)\n    return Promise.resolve(getMoves(contactId))\n}\nconst getMoves = async (contactId) => {\n    let res = []\n    if (contactId) {\n        res = JSON.parse(JSON.stringify(user.moves.filter(move => move.contactId === contactId)))\n    } else {\n        res = JSON.parse(JSON.stringify(user.moves)).splice(0, 3)\n    }\n    const rate = await bitcoinService.getRate(1)\n    res.forEach(move => {\n        move.countBitcoin = move.count * rate;\n        const at = new Date(move.at)\n        move.atToShow = `${at.getDate()}/${at.getMonth()}/${at.getFullYear()}`\n    })\n    return res\n}\n\nexport const userService = {\n    getUser,\n    sendCoins,\n    getMoves,\n    isConnected,\n    setUser\n}","import { userService } from '../services/UserService';\nimport { bitcoinService } from '../services/BitcoinService';\n\n\n// READ\nexport function laodUser() {\n    return async dispatch => {\n        const user = await userService.getUser()\n        user.coins = await bitcoinService.getRate(user.dolars)\n        dispatch({ type: 'LOAD_USER', user })\n    }\n}\n\n\n\nexport function setCurrMoves(id) {\n    return async dispatch => {\n        const moves = await userService.getMoves(id);\n        dispatch({ type: 'SET_CURR_MOVES', moves })\n    }\n}\n\nexport function addMove({ count, _id, name }) {\n    return async dispatch => {\n        const moves = await userService.sendCoins(count, _id, name)\n        dispatch({ type: 'SET_CURR_MOVES', moves })\n    }\n}\n\nexport function loadMove() {\n    return async dispatch => {\n        const moves = await userService.getMoves()\n        dispatch({ type: 'SET_CURR_MOVES', moves })\n    }\n}","import React from 'react'\n\nexport const MovePreview = ({ move,contact }) => {\n    return (\n        <div className=\"move-preview\">\n         { !contact?<p>To: {move.contactName}</p>:''}\n            <p>Amount: <span className=\"dolar\">${move.count}</span> | <span className=\"bitcoin\">BTC:{Math.round(((move.countBitcoin) + Number.EPSILON) * 10000) / 10000}</span></p>\n            <p>At: { move.atToShow}</p>\n        </div>\n    )\n}\n","import React from 'react'\nimport {MovePreview} from './MovePreview'\nexport const MoveList = ({moves,contact=false}) => {\n    return (\n        <div className=\"move-list\">\n            {moves.map(move=><MovePreview contact={contact} move={move} key={move.at}/>)}\n        </div>\n    )\n}\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { ResponsiveLine } from '@nivo/line'\n\n\nimport { laodUser, loadMove } from '../actions/UserActions'\nimport { bitcoinService } from '../services/BitcoinService'\n\nimport { MoveList } from '../components/MoveList'\n\nimport bitcoinSvg from '../assets/imgs/bitcoin.svg';\n\n\nclass HomePage extends Component {\n  async componentDidMount() {\n    this.props.laodUser()\n    this.props.loadMove()\n  }\n\n  setMarket = month => {\n    bitcoinService.getMarketPrice(month)\n      .then(data => this.setState({ data }))\n  }\n\n  render() {\n    if (!this.state?.data) this.setMarket(6)\n    return (\n      <div className=\"home-page\">\n        <div className=\"titles\">\n\n          <h2>Hi {this.props.user?.name}</h2>\n          <p className=\"dolar\">${this.props.user?.dolars}</p>\n          <p>\n            <img src={bitcoinSvg} alt=\"\" />\n            <span>\n              {Math.round(((this.props.user?.coins || 0) + Number.EPSILON) * 10000) / 10000}\n            </span>\n          </p>\n\n        </div>\n        <div className=\"details\">\n          <div className=\"bitcoin\">\n\n            <h3>\n              Bitcoin Rate: {this.state ? ([...this.state.data[0].data].pop().y) : ''}\n            </h3>\n            <div style={{ height: 400, maxWidth: 800 }}>\n              <div className=\"set-cart\">\n                <button onClick={_ => this.setMarket(1)}>1M</button>\n                <button onClick={_ => this.setMarket(2)}>2M</button>\n                <button onClick={_ => this.setMarket(6)}>6M</button>\n                <button onClick={_ => this.setMarket(12)}>12M</button>\n                <button onClick={_ => this.setMarket(24)}>24M</button>\n              </div>\n\n              <ResponsiveLine\n                data={this.state?.data || []}\n                margin={{ top: 50, right: 10, bottom: 50, left: 60 }}\n                xScale={{ type: 'point' }}\n                axisTop={null}\n                axisRight={null}\n                axisBottom={null}\n                axisLeft={{\n                  orient: 'left',\n                  tickSize: 5,\n                  tickPadding: 5,\n                  tickRotation: 0,\n                  legend: 'Dolars',\n                  legendOffset: -50,\n                  legendPosition: 'middle',\n                  colors: '#fff'\n                }}\n                colors={{ scheme: 'nivo' }}\n                pointSize={2}\n                pointColor={{ theme: 'background' }}\n                pointBorderWidth={1}\n                enableGridX={false}\n                enableGridY={false}\n                pointBorderColor={{ from: 'serieColor' }}\n                enableArea={true}\n                areaOpacity={0.25}\n                useMesh={true}\n                theme={{\n                  axis: {\n                    ticks: {\n                      line: {\n                        stroke: \"#9fa6ad\"\n                      },\n                      text: {\n                        fill: \"#9fa6ad\"\n                      }\n                    }\n                  },\n                  grid: {\n                    line: {\n                      stroke: \"pink\",\n                      strokeWidth: 2,\n                      strokeDasharray: \"4 4\"\n                    }\n                  }\n                }}\n              />\n            </div>\n          </div>\n          <div className=\"moves\">\n\n            <h3>Your Last 3 Moves:</h3>\n            {this.props.moves ? <MoveList moves={this.props.moves} /> : ''}\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\nconst mapStateToProps = (state) => {\n  return {\n    user: state.user.user,\n    moves: state.user.currMoves,\n  };\n};\n\nconst mapDispatchToProps = {\n  laodUser, loadMove\n};\n\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(HomePage);\n","const BaseContacts = [\n  {\n    \"_id\": \"5a56640269f443a5d64b32ca\",\n    \"name\": \"Ochoa Hyde\",\n    \"email\": \"ochoahyde@renovize.com\",\n    \"phone\": \"+1 (968) 593-3824\"\n  },\n  {\n    \"_id\": \"5a5664025f6ae9aa24a99fde\",\n    \"name\": \"Hallie Mclean\",\n    \"email\": \"halliemclean@renovize.com\",\n    \"phone\": \"+1 (948) 464-2888\"\n  },\n  {\n    \"_id\": \"5a56640252d6acddd183d319\",\n    \"name\": \"Parsons Norris\",\n    \"email\": \"parsonsnorris@renovize.com\",\n    \"phone\": \"+1 (958) 502-3495\"\n  },\n  {\n    \"_id\": \"5a566402ed1cf349f0b47b4d\",\n    \"name\": \"Rachel Lowe\",\n    \"email\": \"rachellowe@renovize.com\",\n    \"phone\": \"+1 (911) 475-2312\"\n  },\n  {\n    \"_id\": \"5a566402abce24c6bfe4699d\",\n    \"name\": \"Dominique Soto\",\n    \"email\": \"dominiquesoto@renovize.com\",\n    \"phone\": \"+1 (807) 551-3258\"\n  },\n  {\n    \"_id\": \"5a566402a6499c1d4da9220a\",\n    \"name\": \"Shana Pope\",\n    \"email\": \"shanapope@renovize.com\",\n    \"phone\": \"+1 (970) 527-3082\"\n  },\n  {\n    \"_id\": \"5a566402f90ae30e97f990db\",\n    \"name\": \"Faulkner Flores\",\n    \"email\": \"faulknerflores@renovize.com\",\n    \"phone\": \"+1 (952) 501-2678\"\n  },\n  {\n    \"_id\": \"5a5664027bae84ef280ffbdf\",\n    \"name\": \"Holder Bean\",\n    \"email\": \"holderbean@renovize.com\",\n    \"phone\": \"+1 (989) 503-2663\"\n  },\n  {\n    \"_id\": \"5a566402e3b846c5f6aec652\",\n    \"name\": \"Rosanne Shelton\",\n    \"email\": \"rosanneshelton@renovize.com\",\n    \"phone\": \"+1 (968) 454-3851\"\n  },\n  {\n    \"_id\": \"5a56640272c7dcdf59c3d411\",\n    \"name\": \"Pamela Nolan\",\n    \"email\": \"pamelanolan@renovize.com\",\n    \"phone\": \"+1 (986) 545-2166\"\n  },\n  {\n    \"_id\": \"5a5664029a8dd82a6178b15f\",\n    \"name\": \"Roy Cantu\",\n    \"email\": \"roycantu@renovize.com\",\n    \"phone\": \"+1 (929) 571-2295\"\n  },\n  {\n    \"_id\": \"5a5664028c096d08eeb13a8a\",\n    \"name\": \"Ollie Christian\",\n    \"email\": \"olliechristian@renovize.com\",\n    \"phone\": \"+1 (977) 419-3550\"\n  },\n  {\n    \"_id\": \"5a5664026c53582bb9ebe9d1\",\n    \"name\": \"Nguyen Walls\",\n    \"email\": \"nguyenwalls@renovize.com\",\n    \"phone\": \"+1 (963) 471-3181\"\n  },\n  {\n    \"_id\": \"5a56640298ab77236845b82b\",\n\n    \"name\": \"Glenna Santana\",\n    \"email\": \"glennasantana@renovize.com\",\n    \"phone\": \"+1 (860) 467-2376\"\n  },\n  {\n    \"_id\": \"5a56640208fba3e8ecb97305\",\n    \"name\": \"Malone Clark\",\n    \"email\": \"maloneclark@renovize.com\",\n    \"phone\": \"+1 (818) 565-2557\"\n  },\n  {\n    \"_id\": \"5a566402abb3146207bc4ec5\",\n    \"name\": \"Floyd Rutledge\",\n    \"email\": \"floydrutledge@renovize.com\",\n    \"phone\": \"+1 (807) 597-3629\"\n  },\n  {\n    \"_id\": \"5a56640298500fead8cb1ee5\",\n    \"name\": \"Grace James\",\n    \"email\": \"gracejames@renovize.com\",\n    \"phone\": \"+1 (959) 525-2529\"\n  },\n  {\n    \"_id\": \"5a56640243427b8f8445231e\",\n    \"name\": \"Tanner Gates\",\n    \"email\": \"tannergates@renovize.com\",\n    \"phone\": \"+1 (978) 591-2291\"\n  },\n  {\n    \"_id\": \"5a5664025c3abdad6f5e098c\",\n    \"name\": \"Lilly Conner\",\n    \"email\": \"lillyconner@renovize.com\",\n    \"phone\": \"+1 (842) 587-3812\"\n  }\n];\n\nconst contacts = (_ => {\n  const res = localStorage.contacts\n  if (res) return JSON.parse(res);\n  localStorage.contacts = JSON.stringify(BaseContacts)\n  return BaseContacts\n})()\n\nfunction sort(arr) {\n  return arr.sort((a, b) => {\n    if (a.name.toLocaleLowerCase() < b.name.toLocaleLowerCase()) {\n      return -1;\n    }\n    if (a.name.toLocaleLowerCase() > b.name.toLocaleLowerCase()) {\n      return 1;\n    }\n    return 0;\n  })\n}\n\nfunction getContacts(filterBy = null) {\n  return new Promise((resolve, reject) => {\n    var contactsToReturn = contacts;\n    if (filterBy && filterBy.term) {\n      contactsToReturn = filter(filterBy.term)\n    }\n    resolve(sort(contactsToReturn))\n  })\n}\n\nfunction getContactById(id) {\n  return new Promise((resolve, reject) => {\n    const contact = contacts.find(contact => contact._id === id)\n    contact ? resolve(contact) : reject(`Contact id ${id} not found!`)\n  })\n}\n\nfunction deleteContact(id) {\n  return new Promise((resolve, reject) => {\n    const index = contacts.findIndex(contact => contact._id === id)\n    if (index !== -1) {\n      contacts.splice(index, 1)\n    }\n    localStorage.contacts = JSON.stringify(contacts)\n    resolve(contacts)\n  })\n}\n\nfunction _updateContact(contact) {\n  return new Promise((resolve, reject) => {\n    const index = contacts.findIndex(c => contact._id === c._id)\n    if (index !== -1) {\n      contacts[index] = contact\n    }\n    localStorage.contacts = JSON.stringify(contacts)\n    resolve(contact)\n  })\n}\n\nfunction _addContact(contact) {\n  return new Promise((resolve, reject) => {\n    contact._id = _makeId()\n    contacts.unshift(contact)\n    localStorage.contacts = JSON.stringify(contacts)\n    resolve(contact)\n  })\n}\n\n\nfunction saveContact(contact) {\n  return contact._id ? _updateContact(contact) : _addContact(contact)\n}\n\nfunction getEmptyContact() {\n  return {\n    name: '',\n    email: '',\n    phone: ''\n  }\n}\n\nfunction filter(term) {\n  term = term.toLocaleLowerCase()\n  return contacts.filter(contact => {\n    return contact.name.toLocaleLowerCase().includes(term) ||\n      contact.phone.toLocaleLowerCase().includes(term) ||\n      contact.email.toLocaleLowerCase().includes(term)\n  })\n}\n\nexport const contactService = {\n  getContacts,\n  getContactById,\n  deleteContact,\n  saveContact,\n  getEmptyContact\n}\n\nfunction _makeId(length = 10) {\n  var txt = ''\n  var possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789'\n  for (var i = 0; i < length; i++) {\n    txt += possible.charAt(Math.floor(Math.random() * possible.length))\n  }\n  return txt\n}","import { contactService } from '../services/ContacrServie'\n\n// LIST\nexport function loadContacts(filterBy) {\n  return async dispatch => {\n    const contacts = await contactService.getContacts(filterBy);\n    dispatch({ type: 'SET_CONTACTS', contacts })\n  }\n}\n\n// READ\nexport function loadContactById(id) {\n  return async dispatch => {\n    const contact = await contactService.getContactById(id);\n    dispatch({ type: 'SET_CURR_CONTACT', contact })\n  }\n}\n\n// UPDATE + CREATE\nexport function saveContact(contact) {\n  return async dispatch => {\n    const isEdit = !!contact._id\n    contact = await contactService.saveContact(contact);\n\n    if (isEdit) dispatch({ type: 'UPDATE_CONTACT', contact })\n    else dispatch({ type: 'ADD_CONTACT', contact })\n    return contact;\n  }\n}\n\n// REMOVE\n\nexport function deleteContact(id) {\n  return async dispatch => {\n    await contactService.deleteContact(id);\n    dispatch({ type: 'DELETE_CONTACT', id })\n  }\n}\n\n","import React from 'react'\n// import { BrowserRouter as Router } from 'react-router-dom'\nimport { NavLink } from 'react-router-dom';\n\nexport const ContactPreview = ({ contact }) => {\n    return (\n        <NavLink to={'/mister-bitcoin-react/contact/' + contact._id}>\n            <div className=\"contact-preview\">\n                <img src={'https://robohash.org/'+contact._id} alt={contact.name}/>\n                <p>\n                    {contact.name}\n                </p>\n            </div>\n        </NavLink>\n    )\n}\n","import React from 'react'\nimport { ContactPreview } from './ContactPreview'\nexport const ContactList = ({ contacts }) => {\n    return (\n        <div className=\"contact-list\">\n            {contacts.map(contact => (\n                <ContactPreview contact={contact} key={contact._id} />\n            ))}\n        </div>\n    )\n}\n","import React, { Component } from 'react'\n\nexport class ContactFilter extends Component {\n    state = {\n        term: ''\n    }\n    constructor(props) {\n        super(props);\n        this.state = { ...props.filterBy }\n    }\n    onChangeHandler = (ev) => {\n        const { value, name } = ev.target;\n        this.setState({ [name]: value }, () => {\n            this.props.onFilter({ ...this.state });\n        });\n    };\n\n    render() {\n        return (\n            <div className=\"contact-filter\">\n                <form>\n                    <input\n                        type=\"text\"\n                        placeholder=\"search\"\n                        onChange={this.onChangeHandler}\n                        name=\"term\"\n                        value={this.state.term}\n                    />\n                </form>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport { NavLink } from 'react-router-dom'\nimport { connect } from 'react-redux';\n\nimport { loadContacts } from '../actions/ContactActions';\n\nimport { ContactList } from '../components/ContactList'\nimport { ContactFilter } from '../components/ContactFilter'\n\nimport addContactSvg from '../assets/imgs/add-contact.svg';\n\nclass ContactPage extends Component {\n    state = {\n        filterBy: {\n            term: ''\n        },\n        contacts: []\n    }\n    componentDidMount() {\n        this.props.loadContacts(this.state.filterBy)\n    }\n    onFileHendler = filterBy => {\n        this.props.loadContacts(filterBy)\n    }\n\n    render() {\n        return (\n            <div className=\"contact-page\">\n                <ContactFilter onFilter={this.onFileHendler} filterBy={this.state.filterBy}></ContactFilter>\n                <ContactList contacts={this.props.contacts} />\n                <NavLink to=\"/mister-bitcoin-react/edit\">\n                    <img className=\"add\" src={addContactSvg} alt=\"add\" title=\"Add\"/>\n                </NavLink>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        contacts: state.contact.contacts,\n    };\n};\n\nconst mapDispatchToProps = {\n    loadContacts,\n};\n\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactPage);\n","import React, { useState } from 'react'\n\nexport const TransferFund = ({ send, name }) => {\n    const [count, setCount] = useState(0)\n    return (\n        <div className=\"transfer-fund\">\n            <p>Transfer coins to {name}</p>\n            <label>\n                <span>Amount ($):</span>\n                <input type=\"number\" value={count} onChange={ev => { setCount(ev.target.value); }} />\n                <button onClick={() => {send(count);setCount(0)}}>transfer</button>\n            </label>\n        </div>\n    )\n\n}\n","import React, { Component } from 'react'\nimport { NavLink } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport { loadContactById } from '../actions/ContactActions';\nimport { setCurrMoves, addMove } from '../actions/UserActions'\n\nimport { TransferFund } from '../components/TransferFund'\nimport { MoveList } from '../components/MoveList';\n\nimport backSvg from '../assets/imgs/back.svg';\nimport editSvg from '../assets/imgs/edit-contact.svg';\n\nclass ContactDetailsPage extends Component {\n    async componentDidMount() {\n        const id = this.props.match.params.id\n        this.props.loadContactById(id)\n        this.props.setCurrMoves(id)\n    }\n    hendlerSend = count => {\n        const { _id, name } = this.props.contact;\n        this.props.addMove({ _id, name, count })\n    }\n    render() {\n        const { contact } = this.props;\n        if (!contact) {\n            return <div>Loading! :) </div>;\n        }\n        return (\n            <div className=\"contact-details-page\">\n                <nav>\n                    <NavLink to=\"/mister-bitcoin-react/contact\">\n                        <img src={backSvg} alt=\"Back\" />\n                    </NavLink>\n                    <NavLink to={'/mister-bitcoin-react/edit/' + contact._id}>\n                        <img src={editSvg} alt=\"Edit\" />\n                    </NavLink>\n                </nav>\n                <main>\n\n                    <img\n                        src={`https://robohash.org/${contact._id}.png`}\n                        alt=\"\"\n                    />\n                    <p>Name: {contact.name}</p>\n                    <p>Phone: {contact.email}</p>\n                    <p>Email: {contact.phone}</p>\n                    <TransferFund name={contact.name} send={this.hendlerSend} />\n                    <div className=\"moves\">\n                        {this.props.moves.length ? <h3>Your Moves:</h3> : ''}\n                        <MoveList contact moves={this.props.moves} />\n                    </div>\n                </main>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        contact: state.contact.currContact,\n        moves: state.user.currMoves,\n    };\n};\n\nconst mapDispatchToProps = {\n    setCurrMoves,\n    loadContactById,\n    addMove\n};\n\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactDetailsPage);\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux';\n\nimport { loadContactById, saveContact, deleteContact } from '../actions/ContactActions'\n\nimport { Redirect } from 'react-router';\nimport addContactSvg from '../assets/imgs/add-contact.svg';\n\nclass ContactEditPage extends Component {\n    state = {\n        contact: {\n            name: '',\n            email: '',\n            phone: ''\n        }\n    }\n    async componentDidMount() {\n        const id = this.props.match.params.id\n        if (id) {\n            this.setState({ deleteStr: 'Delete' })\n            this.props.loadContactById(id)\n                .then(_ => this.setState({ contact: JSON.parse(JSON.stringify(this.props.currContact)), img: `https://robohash.org/${this.props.currContact._id}.png` }))\n                .catch(_ => { })\n        }\n        else this.setState({ deleteStr: 'Cancel', img: addContactSvg })\n    }\n    handleInputChange = (field, value) => {\n        this.setState(({ contact }) => {\n            return { contact: { ...contact, [field]: value } }\n        })\n    }\n    handleSave = _ => {\n        this.props.saveContact(this.state.contact)\n            .then(contact => this.setState({ redirect: true, newId: contact._id }))\n    }\n    handleDelete = _ => {\n        if (this.state.contact._id) {\n            this.props.deleteContact(this.state.contact._id)\n                .then(_ => this.setState({ back: true }))\n        } else this.setState({ back: true })\n\n    }\n    render() {\n        const { contact } = this.state;\n\n        if (this.state.redirect) {\n            if (contact._id) return <Redirect push to={'/mister-bitcoin-react/contact/' + contact._id} />;\n            else return <Redirect push to={'/mister-bitcoin-react/contact/' + this.state.newId} />;\n        }\n        if (this.state.back) {\n            return <Redirect push to=\"/mister-bitcoin-react/contact\" />;\n        }\n\n        if (!contact) {\n            return <div>Loading! :) </div>;\n        }\n\n        return (\n            <div className=\"contact-edit\">\n                <form onSubmit={ev => ev.preventDefault()}>\n                    <img src={this.state?.img} alt=\"\" />\n                    <input type=\"text\" onChange={ev => this.handleInputChange('name', ev.target.value)} placeholder=\"Name\" value={contact.name} />\n                    <input type=\"text\" onChange={ev => this.handleInputChange('email', ev.target.value)} placeholder=\"Email\" value={contact.email} />\n                    <input type=\"text\" onChange={ev => this.handleInputChange('phone', ev.target.value)} placeholder=\"phone\" value={contact.phone} />\n                    <div className=\"btn\">\n                        <button onClick={this.handleSave}>Save Contact</button>\n                        <button className=\"del\" onClick={this.handleDelete}>{this.state.deleteStr}</button>\n                    </div>\n                </form>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        currContact: state.contact.currContact,\n    };\n};\n\nconst mapDispatchToProps = {\n    loadContactById,\n    saveContact,\n    deleteContact\n};\n\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactEditPage);\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\n\nimport { laodUser, loadMove } from '../actions/UserActions'\nimport { userService } from '../services/UserService'\n\n\nclass SignupPage extends Component {\n    async componentDidMount() {\n        this.setState({ name: '' })\n    }\n\n    clickHelnder = async () => {\n        await userService.setUser(this.state.name)\n        this.props.signup()\n    }\n\n    render() {\n        return (\n            <div className=\"signup-page\">\n                <h1>Hello new user</h1>\n                <form onSubmit={this.clickHelnder}>\n                    <input type=\"text\" placeholder=\"Enter Name\" onChange={ev => this.setState({ name: ev.target.value })} />\n                    <button>Signup</button>\n                </form>\n            </div>\n        )\n    }\n}\nconst mapStateToProps = (state) => {\n    return {\n        user: state.user.user,\n    };\n};\n\nconst mapDispatchToProps = {\n    laodUser, loadMove\n};\n\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignupPage);\n","import React, { useState } from 'react'\nimport { bitcoinService } from '../services/BitcoinService'\nimport { ResponsiveLine } from '@nivo/line'\n\nexport default () => {\n\n    const [data, setData] = useState([])\n\n    const setMarket = month => {\n        bitcoinService.getMarketPrice(month)\n            .then(setData)\n    }\n    if (!data.length) setMarket(6)\n    return (\n        <div className=\"statistic-page\"   >\n            <button onClick={_ => setMarket(2)}>2</button>\n            <button onClick={_ => setMarket(6)}>6</button>\n            <button onClick={_ => setMarket(12)}>12</button>\n            <button onClick={_ => setMarket(24)}>24</button>\n            <div style={{ height: 400, }}>\n                <ResponsiveLine\n                    data={data}\n                    margin={{ top: 50, right: 110, bottom: 10, left: 60 }}\n                    xScale={{ type: 'point' }}\n                    yScale={{ type: 'linear', min: 'auto', max: 'auto', stacked: true, reverse: false }}\n                    axisTop={null}\n                    axisRight={null}\n                    axisBottom={null}\n                    axisLeft={{\n                        orient: 'left',\n                        tickSize: 5,\n                        tickPadding: 5,\n                        tickRotation: 0,\n                        legend: 'Dolars',\n                        legendOffset: -50,\n                        legendPosition: 'middle'\n                    }}\n                    colors={{ scheme: 'nivo' }}\n                    pointSize={2}\n                    pointColor={{ theme: 'background' }}\n                    pointBorderWidth={2}\n                    pointBorderColor={{ from: 'serieColor' }}\n                    enableArea={true}\n                    areaOpacity={0.25}\n                    useMesh={true}\n                />\n            </div>\n\n        </div>\n    )\n\n}\n","import React from 'react'\nimport { NavLink } from 'react-router-dom';\n\nimport homeSvg from '../assets/imgs/home.svg';\nimport membersSvg from '../assets/imgs/members.svg';\nexport const NavBar = () => {\n    return (\n        <div className=\"nav-bar\">\n            <NavLink to=\"/mister-bitcoin-react\">\n                <img src={homeSvg} alt=\"Home\" title=\"Home\" />\n            </NavLink>\n\n            <NavLink to=\"/mister-bitcoin-react/contact\">\n                <img src={membersSvg} alt=\"Contact\" title=\"Contact\" />\n\n            </NavLink>\n        </div>\n    )\n}\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\n\nimport { userService } from './services/UserService'\n\nimport HomePage from './pages/HomePage';\nimport ContactPage from './pages/ContactPage';\nimport ContactDetailsPage from './pages/ContactDetailsPage'\nimport ContactEditPage from './pages/ContactEditPage'\nimport SignupPage from './pages/SignupPage'\nimport StatisticPage from './pages/StatisticPage'\n\nimport { NavBar } from './components/NavBar'\n\nfunction App() {\nconst [,setUser] =  useState(null)\n  const signupHelnder = _ => {\n    setUser()\n  }\n\n  return (\n    <div className=\"App\">\n      {\n        userService.isConnected() ? (\n          <Router>\n            <NavBar></NavBar>\n            <Switch>\n              <Route exact path=\"/mister-bitcoin-react\" component={HomePage} />\n              <Route path=\"/mister-bitcoin-react/contact/:id\" component={ContactDetailsPage} />\n              <Route path=\"/mister-bitcoin-react/contact\" component={ContactPage} />\n              <Route path=\"/mister-bitcoin-react/edit/:id?\" component={ContactEditPage} />\n              <Route path=\"/mister-bitcoin-react/statistic\" component={StatisticPage} />\n            </Switch>\n          </Router>\n        ) : <SignupPage signup={signupHelnder} />\n      }\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const initialState = {\n  user: null,\n  currMoves:[],\n}\n\nexport default function ContactReducer(state = initialState, action) {\n  switch (action.type) {\n    case 'LOAD_USER':\n      return { ...state, user: action.user }\n      case 'SET_CURR_MOVES':\n        return { ...state, currMoves: action.moves }\n   default:\n      return state;\n  }\n}","const initialState = {\n    contacts: [],\n    currContact: null\n  }\n  \n  export default function ContactReducer(state = initialState, action) {\n    switch (action.type) {\n      case 'SET_CONTACTS':\n        return { ...state, contacts: action.contacts }\n      case 'SET_CURR_CONTACT':\n        return { ...state, currContact: action.contact }\n      case 'UPDATE_CONTACT':\n        return {\n          ...state,\n          contacts: state.contacts.map(contact => {\n            if (contact._id === action.contact._id) return action.contact;\n            return contact;\n          })\n        }\n      case 'DELETE_CONTACT':\n        return {\n          ...state,\n          contacts: state.contacts.filter(contact => {\n            return contact._id !== action.id\n          })\n        }\n      case 'ADD_CONTACT':\n        return {\n          ...state,\n          contacts: [...state.contacts, action.contact]\n        }\n      default:\n        return state;\n    }\n  };","import { createStore, combineReducers, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\n\nimport UserReducer from './reducers/UserReducer';\nimport ContactReducer from './reducers/ContactReducer';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst rootReducer = combineReducers({\n  contact: ContactReducer,\n  user: UserReducer\n})\n\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)));\n\n\nexport default store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App.jsx';\nimport * as serviceWorker from './serviceWorker';\n\nimport { Provider } from 'react-redux';\n\nimport store from './store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);\n\nserviceWorker.register();\nwindow.addEventListener('beforeinstallprompt', (e) => {\n  console.log('beforeinstallprompt event has fired')\n  e.prompt()\n});"],"sourceRoot":""}